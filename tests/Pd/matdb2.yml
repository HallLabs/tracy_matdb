title: 'Pd `phonopy` Supercell Convergence'
# Ordered list of species; this is the same order as should be in the
# POTCAR file for VASP calculations.
species:
  - 'Pd'
# If the POTCAR names are non-standard, include the *suffix* after the
# element name here.
potcars:
  directory: './tests/vasp'
  pseudo: 'paw_PBE'
  version: '28Jan2005'
  pd: '_pv'
# Directory in which the database folder system will be created.
root: './tests/Pd'
venv: 'matdb-dev'
# List the names of files in the root directory that serve as seed
# configurations for sub-sampling to create additional configs. The
# name keyword decides what the folder name will be called in which
# all sub-sampled configurations are created.
configs:
  - name: 'Pd'
    poscar: 'POSCAR'
# These are global settings for INCAR that will be applied to *all*
# the VASP calculations in all databases. They can be overridden in
# each database.
incar:
  prec: 'a'
  encut: 400
  isym: 0
  lwave: False
  lreal: 'auto'
  ediff: '1e-5'
  ismear: 1
  sigma: 0.1
# We use Mueller k-points exclusively. These kpoint settings apply to
# all database calculations.
kpoints:
  mindistance: 20
# Parameters for the job arrays that will be submitted for each
# database. These can be overridden in each database below as well.
execution:
  template: 'run_array_ml.sh'
  time: 4
  ntasks: 1
  nodes: 1
  mem_per_cpu: 4
  job_name: 'Pd DB'
  partition: 'physics'
  array_limit: 50
  modules_load: ['mkl/11.2.0']
  exec_path: 'vasp'
#Different split parameters to apply globally to all database types.
splits:
  A: 0.4
  B: 0.2
# Next, we include a list of all the databases we want to create. A
# database following this pattern is created *for each* of the seed
# configurations listed above.
databases:
  #The PhononBase class generates the dynamical matrix that is needed
  #by PhononDatabase.
  - name: 'phonon'
    steps:
      - type: "phonon.DynMatrix"
        kpoints:
          mindistance: 30
        phonopy:
          dim: [2, 2, 2]
        bandmesh: [13, 13, 13]
        dosmesh: [10, 10, 10]
    niterations:
      - phonopy.dim: [0,1,1,1,0,1,1,1,0]
        suffix: "-2"
      - phonopy.dim: [0,2,2,2,0,2,2,2,0]
        suffix: "-16"
      - phonopy.dim: [-2,2,2,2,-2,2,2,2,-2]
        suffix: "-32"
      - phonopy.dim: [-1,1,1,1,-1,1,1,1,-1]
        suffix: "-4"
      - phonopy.dim: [3,3,3]
        suffix: "-54"
  - name: 'modulate'
    steps:
      - "Pd.phonon-16.dynmatrix"
      - type: "phonon.Modulation"
        nconfigs: 5
        sampling: 'uniform'
        calibrate: 5
          
fitting:
  dbs: ['*']
  execution:
    template: 'run_teachsparse_ml.sh'
    time: 10
    ntasks: 8
    nodes: 1
    mem_per_cpu: 5
    job_name: 'AgPd GAP'
  e0:
    Pd: -1.45835775
  plotting:
    plots: 'efdzv'
    subset: 'super'
  fits:
    - name: "2b"
      dbs: ["Pd.phonon-*"]
      steps:
        - type: "gap.GAP"
          nb: 2
          cutoff: 6.0
          cutoff_transition_width: 1.0
          n_sparse: 20
          split: ""
          sigmas:
            __: [.001, 0.01, 0.1, 1.0]
            liq: [.005, 0.03, 0.2, 1.0]
          delta: 0.5
      execution:
        time: 1
        ntasks: 1
      niterations:
        - split: "A"
          suffix: "A"
          delta*: [0.5, 0.4, 0.3]
          sigmas.liq*:
            - [.005, 0.03, 0.2, 1.0]
            - [.01, 0.1, 0.2, 1.0]
        - split: "B"
          suffix: "B"
    - name: "2b3b"
      split: "B"
      steps:
        - "2b-B.2b"
        - type: "gap.GAP"
          nb: 3
          cutoff: 3.5
          cutoff_transition_width: 0.5
          n_sparse: 200
          delta: 0.5
